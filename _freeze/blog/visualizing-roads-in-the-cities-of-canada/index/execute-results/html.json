{
  "hash": "7e4113253256bb92b8f6a9d4a3c8d3b0",
  "result": {
    "markdown": "---\ntitle: Visualizing roads in the cities of Canada\ncategories:\n  - julia\n  - visualization\nkeywords: julia\ndate: '2023-04-29T12:38:41-0400'\n---\n\n\nLet's import some packages first.\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing GeoMakie\nusing GeoInterfaceMakie\nusing GeoInterface\nusing CairoMakie\nusing Shapefile\nusing DataFrames\nusing DataFramesMeta\nusing StringEncodings\nusing Pkg.Artifacts\n```\n:::\n\n\nIf you want to run this interactively, you can replace `CairoMakie` with `GLMakie`, i.e.\n\n```diff\n- import CairoMakie\n+ import GLMakie\n```\n\n## Data\n\nRepresentations of Canada's national road network are available from [Statistics Canada](https://www12.statcan.gc.ca/census-recensement/2011/geo/RNF-FRR/index-eng.cfm).\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nartifact_roadnetwork = Pkg.Artifacts.ensure_artifact_installed(\"roadnetwork\", joinpath(@__DIR__, \"Artifacts.toml\"))\npath = joinpath(artifact_roadnetwork, \"lrnf000r21a_e.shp\")\n@time gdf = DataFrame(Shapefile.Table(path));\n@show size(gdf)\nfirst(gdf, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 45.218459 seconds (116.50 M allocations: 7.752 GiB, 3.89% gc time, 2.02% compilation time)\nsize(gdf) = (2242117, 26)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div><div style = \"float: left;\"><span>1×26 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">geometry</th><th style = \"text-align: left;\">OBJECTID</th><th style = \"text-align: left;\">NGD_UID</th><th style = \"text-align: left;\">NAME</th><th style = \"text-align: left;\">TYPE</th><th style = \"text-align: left;\">DIR</th><th style = \"text-align: left;\">AFL_VAL</th><th style = \"text-align: left;\">ATL_VAL</th><th style = \"text-align: left;\">AFR_VAL</th><th style = \"text-align: left;\">ATR_VAL</th><th style = \"text-align: left;\">CSDDGUID_L</th><th style = \"text-align: left;\">CSDUID_L</th><th style = \"text-align: left;\">CSDNAME_L</th><th style = \"text-align: left;\">CSDTYPE_L</th><th style = \"text-align: left;\">CSDDGUID_R</th><th style = \"text-align: left;\">CSDUID_R</th><th style = \"text-align: left;\">CSDNAME_R</th><th style = \"text-align: left;\">CSDTYPE_R</th><th style = \"text-align: left;\">PRDGUID_L</th><th style = \"text-align: left;\">PRUID_L</th><th style = \"text-align: left;\">PRNAME_L</th><th style = \"text-align: left;\">PRDGUID_R</th><th style = \"text-align: left;\">PRUID_R</th><th style = \"text-align: left;\">PRNAME_R</th><th style = \"text-align: left;\">RANK</th><th style = \"text-align: left;\">CLASS</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Union{Missing, Shapefile.Polyline}\" style = \"text-align: left;\">Polyline</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Union{Missing, String}\" style = \"text-align: left;\">String?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Polyline(Rect(7.65014e6, 1.27149e6, 7.65038e6, 1.2717e6), Int32[0], Shapefile.Point[Point(7.65014e6, 1.27149e6), Point(7.65017e6, 1.2715e6), Point(7.6502e6, 1.27152e6), Point(7.65023e6, 1.27153e6), Point(7.65024e6, 1.27154e6), Point(7.65027e6, 1.27156e6), Point(7.6503e6, 1.27158e6), Point(7.65031e6, 1.27159e6), Point(7.65033e6, 1.27162e6), Point(7.65035e6, 1.27164e6), Point(7.65036e6, 1.27166e6), Point(7.65037e6, 1.27169e6), Point(7.65038e6, 1.2717e6)])</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">5792582</td><td style = \"text-align: left;\">des 60</td><td style = \"text-align: left;\">RANG</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">195</td><td style = \"text-align: left;\">195</td><td style = \"text-align: left;\">182</td><td style = \"text-align: left;\">194</td><td style = \"text-align: left;\">2021A00052457050</td><td style = \"text-align: left;\">2457050</td><td style = \"text-align: left;\">Saint-Marc-sur-Richelieu</td><td style = \"text-align: left;\">M\\xc9</td><td style = \"text-align: left;\">2021A00052457050</td><td style = \"text-align: left;\">2457050</td><td style = \"text-align: left;\">Saint-Marc-sur-Richelieu</td><td style = \"text-align: left;\">M\\xc9</td><td style = \"text-align: left;\">2021A000224</td><td style = \"text-align: left;\">24</td><td style = \"text-align: left;\">Quebec / Qu\\xe9bec</td><td style = \"text-align: left;\">2021A000224</td><td style = \"text-align: left;\">24</td><td style = \"text-align: left;\">Quebec / Qu\\xe9bec</td><td style = \"text-align: left;\">4</td><td style = \"text-align: left;\">23</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThe documentation says `CSDNAME` is the \"Census subdivision name\", which seems to map to cities.\n\nLet's convert it to a proper encoding first:\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nlatin1_to_utf8(s) = decode(Vector{UInt8}(String(coalesce(s, \"\"))), \"Windows-1252\")\n@time @rtransform! gdf begin\n  :CSDNAME_L_UTF8 = latin1_to_utf8(:CSDNAME_L)\n  :CSDNAME_R_UTF8 = latin1_to_utf8(:CSDNAME_R)\nend\nnothing #| hide_line\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 17.346026 seconds (111.19 M allocations: 9.443 GiB, 17.28% gc time, 5.29% compilation time: 17% of which was recompilation)\n```\n:::\n:::\n\n\n## Visualizations\n\nWe can now create a plot for each city using Makie:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code code-fold=\"true\"}\nfunction plot_city(gdf, city_name)\n  df = @rsubset gdf (:CSDNAME_L_UTF8 == city_name || :CSDNAME_R_UTF8 == city_name)\n  empty_theme = Theme(\n    fonts=(; weird=\"Blackchancery\"),\n    fontsize=32,\n    Axis=(\n      backgroundcolor=:transparent,\n      leftspinevisible=false,\n      rightspinevisible=false,\n      bottomspinevisible=false,\n      topspinevisible=false,\n      xticklabelsvisible=false,\n      yticklabelsvisible=false,\n      xgridcolor=:transparent,\n      ygridcolor=:transparent,\n      xminorticksvisible=false,\n      yminorticksvisible=false,\n      xticksvisible=false,\n      yticksvisible=false,\n      xautolimitmargin=(0.0, 0.0),\n      yautolimitmargin=(0.0, 0.0),\n      titlefont=:weird,\n    ),\n  )\n  with_theme(empty_theme) do\n    fig = Figure()\n    ax = Axis(fig[1, 1])\n    poly!.(GeoInterface.convert.(Ref(CairoMakie.GeometryBasics), df[:, :geometry]); strokecolor=:black, color=:black)\n    ax.title = city_name\n    fig\n  end\nend;\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nplot_city(gdf, \"Toronto\")\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n![](index_files/figure-html/cell-7-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nplot_city(gdf, \"Montréal\")\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](index_files/figure-html/cell-8-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nplot_city(gdf, \"Vancouver\")\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](index_files/figure-html/cell-9-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\nplot_city(gdf, \"Ottawa\")\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n![](index_files/figure-html/cell-10-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nplot_city(gdf, \"Calgary\")\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n![](index_files/figure-html/cell-11-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nplot_city(gdf, \"Edmonton\")\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n![](index_files/figure-html/cell-12-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nplot_city(gdf, \"Winnipeg\")\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n![](index_files/figure-html/cell-13-output-1.svg){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}